syntax = "proto3";

package ethclient.ethclient;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "ethclient/ethclient/params.proto";
import "ethclient/ethclient/storage.proto";

option go_package = "ethclient/x/ethclient/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ethclient/ethclient/params";
  
  }
  
  // Queries a Storage by index.
  rpc QueryStorage (QueryGetStorageRequest) returns (QueryGetStorageResponse) {
    option (google.api.http).get = "/ethclient/ethclient/storage";
  
  }
  
  // Queries a list of Proof items.
  rpc QueryProof (QueryProofRequest) returns (QueryProofResponse) {
    option (google.api.http).get = "/ethclient/ethclient/proof/{address}/{storage}/{block}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1;
}

message QueryGetStorageRequest {
  string address = 1;
  int64 block   = 2;
  string storage = 3; // ethereum storage key
}

message QueryGetStorageResponse {
  Storage Storage = 1 [(gogoproto.nullable) = false];
}

message QueryProofRequest {
  string address = 1;
  string storage = 2;
  int64 block   = 3;
}

message QueryProofResponse {
  string proof = 1; // JSON encoded proof obtained by eth_getProof
}

